; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc < %s -march=nvptx64 -mcpu=sm_70 -mattr=+ptx60 | FileCheck %s --check-prefix=SM70
; RUN: %if ptxas %{ llc < %s -march=nvptx -mcpu=sm_70 -mattr=+ptx60 | %ptxas-verify %}


define void @fence_acquire_sys() {
; SM70-LABEL: fence_acquire_sys(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.sys;
; SM70-NEXT:    ret;
    fence syncscope("") acquire
    ret void
}


define void @fence_acquire_cta() {
; SM70-LABEL: fence_acquire_cta(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.cta;
; SM70-NEXT:    ret;
    fence syncscope("block") acquire
    ret void
}

; .cluster scope unsupported on SM = 70 PTX = 60

define void @fence_acquire_gpu() {
; SM70-LABEL: fence_acquire_gpu(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.gpu;
; SM70-NEXT:    ret;
    fence syncscope("device") acquire
    ret void
}


define void @fence_release_sys() {
; SM70-LABEL: fence_release_sys(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.sys;
; SM70-NEXT:    ret;
    fence syncscope("") release
    ret void
}


define void @fence_release_cta() {
; SM70-LABEL: fence_release_cta(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.cta;
; SM70-NEXT:    ret;
    fence syncscope("block") release
    ret void
}

; .cluster scope unsupported on SM = 70 PTX = 60

define void @fence_release_gpu() {
; SM70-LABEL: fence_release_gpu(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.gpu;
; SM70-NEXT:    ret;
    fence syncscope("device") release
    ret void
}


define void @fence_acq_rel_sys() {
; SM70-LABEL: fence_acq_rel_sys(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.sys;
; SM70-NEXT:    ret;
    fence syncscope("") acq_rel
    ret void
}


define void @fence_acq_rel_cta() {
; SM70-LABEL: fence_acq_rel_cta(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.cta;
; SM70-NEXT:    ret;
    fence syncscope("block") acq_rel
    ret void
}

; .cluster scope unsupported on SM = 70 PTX = 60

define void @fence_acq_rel_gpu() {
; SM70-LABEL: fence_acq_rel_gpu(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.acq_rel.gpu;
; SM70-NEXT:    ret;
    fence syncscope("device") acq_rel
    ret void
}


define void @fence_seq_cst_sys() {
; SM70-LABEL: fence_seq_cst_sys(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.sc.sys;
; SM70-NEXT:    ret;
    fence syncscope("") seq_cst
    ret void
}


define void @fence_seq_cst_cta() {
; SM70-LABEL: fence_seq_cst_cta(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.sc.cta;
; SM70-NEXT:    ret;
    fence syncscope("block") seq_cst
    ret void
}

; .cluster scope unsupported on SM = 70 PTX = 60

define void @fence_seq_cst_gpu() {
; SM70-LABEL: fence_seq_cst_gpu(
; SM70:       {
; SM70-EMPTY:
; SM70-EMPTY:
; SM70-NEXT:  // %bb.0:
; SM70-NEXT:    fence.sc.gpu;
; SM70-NEXT:    ret;
    fence syncscope("device") seq_cst
    ret void
}

