; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc < %s -march=nvptx64 -mcpu=sm_30 -mattr=+ptx50 | FileCheck %s --check-prefix=SM30
; RUN: %if ptxas %{ llc < %s -march=nvptx -mcpu=sm_30 -mattr=+ptx50 | %ptxas-verfy %}


define void @fence_acquire_() {
; SM30-LABEL: fence_acquire_(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.sys;
; SM30-NEXT:    ret;
    fence syncscope("") acquire
    ret void
}


define void @fence_acquire_block() {
; SM30-LABEL: fence_acquire_block(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.cta;
; SM30-NEXT:    ret;
    fence syncscope("block") acquire
    ret void
}

; .cluster scope unsupported on SM = 30 PTX = 50

define void @fence_acquire_device() {
; SM30-LABEL: fence_acquire_device(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.gl;
; SM30-NEXT:    ret;
    fence syncscope("device") acquire
    ret void
}


define void @fence_release_() {
; SM30-LABEL: fence_release_(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.sys;
; SM30-NEXT:    ret;
    fence syncscope("") release
    ret void
}


define void @fence_release_block() {
; SM30-LABEL: fence_release_block(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.cta;
; SM30-NEXT:    ret;
    fence syncscope("block") release
    ret void
}

; .cluster scope unsupported on SM = 30 PTX = 50

define void @fence_release_device() {
; SM30-LABEL: fence_release_device(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.gl;
; SM30-NEXT:    ret;
    fence syncscope("device") release
    ret void
}


define void @fence_acq_rel_() {
; SM30-LABEL: fence_acq_rel_(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.sys;
; SM30-NEXT:    ret;
    fence syncscope("") acq_rel
    ret void
}


define void @fence_acq_rel_block() {
; SM30-LABEL: fence_acq_rel_block(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.cta;
; SM30-NEXT:    ret;
    fence syncscope("block") acq_rel
    ret void
}

; .cluster scope unsupported on SM = 30 PTX = 50

define void @fence_acq_rel_device() {
; SM30-LABEL: fence_acq_rel_device(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.gl;
; SM30-NEXT:    ret;
    fence syncscope("device") acq_rel
    ret void
}


define void @fence_seq_cst_() {
; SM30-LABEL: fence_seq_cst_(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.sys;
; SM30-NEXT:    ret;
    fence syncscope("") seq_cst
    ret void
}


define void @fence_seq_cst_block() {
; SM30-LABEL: fence_seq_cst_block(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.cta;
; SM30-NEXT:    ret;
    fence syncscope("block") seq_cst
    ret void
}

; .cluster scope unsupported on SM = 30 PTX = 50

define void @fence_seq_cst_device() {
; SM30-LABEL: fence_seq_cst_device(
; SM30:       {
; SM30-EMPTY:
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    membar.gl;
; SM30-NEXT:    ret;
    fence syncscope("device") seq_cst
    ret void
}

